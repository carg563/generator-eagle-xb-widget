,        
        {
            when: function (response) {
                // only show this step if user answered TRUE to 'hasConfig'
                return response.widgetType === "LAYOUT";
            },
            type: 'checkbox',
            message: 'Which features would you like to include?',
            name: 'features',
            choices: [
                {
                    value: 'hasLocale',
                    name: 'Locale (i18n) file'
                },
                {
                    value: 'hasSettingPage',
                    name: 'Has a settings page'
                },
                {
                    value: 'hasConfig',
                    name: 'Has a configuration file'
                },
                {
                    value: 'hasBuilderSupportModule',
                    name: 'Include builder support modules'
                },
                {
                    value: 'hasLayoutItemSettingPage',
                    name: 'Has layout settings page'
                },
                {
                    value: 'includeExtensions',
                    name: 'Include extensions'
                }
            ],
            'default': ['hasLocale','hasSettingsPage','hasConfig','hasBuilderSupportModule','hasLayoutItemSettingPage','includeExtensions']
        },
        {
            when: function (response) {
                // only show this step if user answered TRUE to 'hasConfig'
                return response.widgetType === "CONTROLLER";
            },
            type: 'checkbox',
            message: 'Which features would you like to include?',
            name: 'features',
            choices: [
                {
                    value: 'hasLocale',
                    name: 'Locale (i18n) file'
                },
                {
                    value: 'hasEmdeddedLayout',
                    name: 'Has an embedded layout'
                },
                {
                    value: 'hasSettingPage',
                    name: 'Has a settings page'
                },
                {
                    value: 'hasConfig',
                    name: 'Has a configuration file'
                },
                {
                    value: 'hasBuilderSupportModule',
                    name: 'Include builder support modules'
                },
                {
                    value: 'includeMessageActions',
                    name: 'Include message actions'
                },
                {
                    value: 'includePublishMessages',
                    name: 'Include publish messages'
                },
                {
                    value: 'includeExtensions',
                    name: 'Include extensions'
                },

                {
                    value: 'dataActions',
                    name: 'Include data actions'
                },
                {
                    value: 'defaultHeight',
                    name: 'Default Height'
                },
                {
                    value: 'defaultWidth',
                    name: 'Default Width'
                }

            ],
            'default': [hasLocale','hasEmdeddedLayout','hasSettingPage','hasConfig','hasBuilderSupportModule','includeMessageActions', 'includePublishMessages', 'includeExtensions', 'dataActions','defaultSize']
        }



             this.widgetsType = props.widgetsType;
            this.log(' ' + this.widgetsType);

            this.autoBindDataSource = props.features.indexOf('autoBindDataSource') > -1;
            this.hasLocale = props.features.indexOf('hasLocale') > -1;
            this.hasEmdeddedLayout = props.features.indexOf('hasEmdeddedLayout') > -1;
            this.hasMainClass = props.features.indexOf('hasMainClass') > -1;
            this.canCreateMapView = props.features.indexOf('canCreateMapView') > -1;
            this.hasSettingPage = props.features.indexOf('hasSettingPage') > -1;
            this.hasConfig = props.features.indexOf('hasConfig') > -1;
            this.hasBuilderSupportModule = props.features.indexOf('hasBuilderSupportModule') > -1;
            this.hasLayoutItemSettingPage = props.features.indexOf('hasLayoutItemSettingPage') > -1;
            this.supportInlineEditing = props.features.indexOf('supportInlineEditing') > -1;
            this.supportRepeat = props.features.indexOf('supportRepeat') > -1;
            this.includeMessageActions = props.features.indexOf('includeMessageActions') > -1;
            this.includePublishMessages = props.features.indexOf('includePublishMessages') > -1;
            this.includeExtensions = props.features.indexOf('includeExtensions') > -1;
            this.dataActions = props.features.indexOf('dataActions') > -1;
            this.defaultSize = props.features.indexOf('defaultSize') > -1;
            
        },




      